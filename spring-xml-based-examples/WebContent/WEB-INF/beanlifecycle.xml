<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- Bean LifeCycle: InitializingBean and DisposableBean -->
	<bean id="bean1" class="com.spring.bean.Bean"></bean>

	<!--@PostConstruct and @PreDestroy ANNOTATION BEASED(com.spring.bean.Bean2 
		class) -->
	<context:component-scan
		base-package="com.spring.bean"></context:component-scan>

	<!--Using init-method and destroy-method attribute -->
	<bean id="bean3" class="com.spring.bean.Bean3"
		init-method="initMethod" destroy-method="destroy"></bean>

	<!--Multiple lifecycle mechanisms configured for the same bean, with different 
		initialization methods, are called as follows -->
	<!--• Methods annotated with @PostConstruct • afterPropertiesSet() as defined 
		by the InitializingBean callback interface • A custom configured init() method 
		Destroy methods are called in the same order: • Methods annotated with @PreDestroy 
		• destroy() as defined by the DisposableBean callback interface • A custom 
		configured destroy() method -->


	<!--LifeCycle Interface -->
	<bean id="bean4" class="com.spring.bean.Bean4"
		init-method="initMethod" destroy-method="destroy"></bean>

	<!--BeanPostProcessor -->
	<bean
		class="com.spring.bean.InstantiationTracingBeanPostProcessor"></bean>

	<!--PropertyPlaceholderConfigurer -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:properties"></property>
	</bean>

	<bean id="datasource" class="com.spring.bean.BasicDataSource">
		<property name="driverClassName"
			value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="userName" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

</beans>
